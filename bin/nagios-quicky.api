#!/usr/bin/env perl
use 5.014;
use strict;
use warnings;
use utf8;

use File::Basename;
use Carp;
use Mojolicious::Lite;
use FindBin;
use lib qq($FindBin::Bin/../lib);
use Nagios::Quicky::Command;

helper nagios_quicky => sub {
  no warnings;
  local $Nagios::Quicky::Command::default_procs = 8;
  return Nagios::Quicky::Command->new;
};


app->renderer->default_format('json');
get '/check/(#host)' => sub {
  my $self = shift;

  my $x = $self->nagios_quicky;

  local $ENV{DEBUG} = 1;
  my $host = $self->param('host');
  my $ref = $x->exec( $host );

  my $all_ok = delete $ref->{all_ok}
             ? 1
             : 0;

  $self->render(
                 json => {
                           result => 1,
                           data   => {
                                       checked => $ref,
                                       all_ok  => $all_ok,
                                     }
                         }
               );

};

get '/cli' => sub {
  my $self = shift;

  my $code = qq{};
  my $dir = dirname __FILE__;
  my $cli_file_path = qq($dir/nagios-quicky.cli);
  open my $fh, "<", $cli_file_path
    or croak "cannot file open($cli_file_path)";
  $code .= $_ while (<$fh>);
  close $fh;

  $self->render( text => $code );

};

app->start;


__DATA__
@@ exception.json.ep
% use Mojo::JSON;
% return Mojo::JSON->new->encode( { result => 0 } );
